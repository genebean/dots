# Path to your oh-my-zsh installation.
export ZSH=~/.oh-my-zsh

# Set name of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-zsh is loaded.
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
if [[ `uname` == 'Linux' ]]; then
  ZSH_THEME="af-magic"
else
  ZSH_THEME="beanbag"
  #ZSH_THEME="pygmalion"
  #ZSH_THEME="muse"
fi

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
ENABLE_CORRECTION="false"

# Uncomment the following line to display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="false"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(aws brew bundler gem git git-flow github history kubectl osx pip python terraform vagrant)

source $ZSH/oh-my-zsh.sh

# User configuration

[ -f ~/.private-env ] && source ~/.private-env || echo '~/.private-env is missing'

# Start GPG agent
export GPG_TTY=$(tty)
gpg-connect-agent /bye
export SSH_AUTH_SOCK=~/.gnupg/S.gpg-agent.ssh

# export MANPATH="/usr/local/man:$MANPATH"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
#alias ll='ls -G -l'
#alias ls='ls -G'
alias biv='bundle install --path=vendor/bundle'
alias gbc='git branch --merged | command grep -vE "^(\*|\s*(master|develop|production)\s*$)" | command xargs -n 1 git branch -d'
alias sal='ssh-add -L'
alias ogk='/Applications/GitKraken.app/Contents/MacOS/GitKraken &'
alias sz='source ~/.zshrc'
alias st='/Applications/SourceTree.app/Contents/MacOS/SourceTree &'
alias ykey='pkill gpg-agent && source ~/.zshrc; ssh-add -L'

# this makes grv from homebrew work
unalias grv

function otpon() {
        osascript -e 'tell application "yubiswitch" to KeyOn'
}
function otpoff() {
        osascript -e 'tell application "yubiswitch" to KeyOff'
}

# helper for aws and assume-role
function awsrole() {
        echo "Enter MFA token:"
        read mfatoken
        eval $(assume-role $1 $AWS_HELPER_USERNAME $mfatoken)
}

function aws_account_info {
[ "$AWS_ACCOUNT_NAME" ] && [ "$AWS_ACCOUNT_ROLE" ] && echo "%{$reset_color%}%{$fg[blue]%}aws:(%{$reset_color%}%{$fg[red]%}$AWS_ACCOUNT_NAME:$AWS_ACCOUNT_ROLE%{$fg[blue]%})%{$reset_color%}"
}
# )ofni_tnuocca_swa($ is $(aws_account_info) backwards
#PROMPT=`echo $PROMPT | rev | sed 's/ / )ofni_tnuocca_swa($ /'| rev`

export EDITOR='vim'
export POWERLINE_CONFIG_COMMAND='/usr/local/bin/powerline-config'
export VAGRANT_DEFAULT_PROVIDER='virtualbox'

export PATH=$PATH:~/.nexustools

if [[ `uname` == 'Darwin' ]]; then
  export PATH=$PATH:/usr/local/sbin

  # Araxis needs to come first so that its tools don't get stomped
  # by ones Homebrew installs to /usr/local/bin. In particular, compare
  # from ImageMagick breaks using git difftool.
  export PATH=/Applications/Araxis\ Merge.app/Contents/Utilities:$PATH

  eval '/usr/libexec/path_helper -s' > /dev/null

  # optional additions from homebrew
  [ -d /usr/local/opt/qt/bin ] && export PATH=$PATH:/usr/local/opt/qt/bin

  # use homebrew's ruby
  [ -d /usr/local/opt/ruby/bin ] && export PATH=/usr/local/opt/ruby/bin:$PATH

  if [[ -f '/Applications/google-cloud-sdk' ]]; then
    source /Applications/google-cloud-sdk/completion.zsh.inc
    source /Applications/google-cloud-sdk/path.zsh.inc
  fi

  # added by travis gem
  [ -f ~/.travis/travis.sh ] && source ~/.travis/travis.sh || echo 'The travis gem is missing. After installing it run "echo y|travis" to create ~/.travis'
fi
